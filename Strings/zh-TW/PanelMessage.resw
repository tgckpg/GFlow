<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Download" xml:space="preserve">
    <value>下載</value>
  </data>
  <data name="EmptyCrawling" xml:space="preserve">
    <value>程序列表是空的 -&gt; 什麼都不做。</value>
  </data>
  <data name="EmptyUrlList" xml:space="preserve">
    <value>列表為空。忘了添加網址？</value>
  </data>
  <data name="IncomingCheck" xml:space="preserve">
    <value>檢查傳入的參數</value>
  </data>
  <data name="InvalidXML" xml:space="preserve">
    <value>無效的XML？</value>
  </data>
  <data name="NoUsablePayload" xml:space="preserve">
    <value>無法找到一個可用的有效載荷。跳過此步驟。</value>
  </data>
  <data name="ParseOK" xml:space="preserve">
    <value>解析成功</value>
  </data>
  <data name="ProceduralSpider" xml:space="preserve">
    <value>蜘蛛</value>
  </data>
  <data name="Reading" xml:space="preserve">
    <value>讀取</value>
  </data>
  <data name="RunComplete" xml:space="preserve">
    <value>執行完畢</value>
  </data>
  <data name="Running" xml:space="preserve">
    <value>執行</value>
  </data>
  <data name="Saved" xml:space="preserve">
    <value>已儲存</value>
  </data>
  <data name="SaveFailed" xml:space="preserve">
    <value>儲存失敗</value>
  </data>
  <data name="Welcome" xml:space="preserve">
    <value>歡迎來到蜘蛛程序的控制面板</value>
  </data>
  <data name="SCRIPT_LIVE" xml:space="preserve">
    <value>腳本的存活時間為 {0} 秒</value>
  </data>
  <data name="SCRIPT_LIVE_D" xml:space="preserve">
    <value>剩餘 {0} 秒鐘</value>
  </data>
  <data name="SCRIPT_NAV_FALIED" xml:space="preserve">
    <value>導航失敗</value>
  </data>
  <data name="SCRIPT_TIMED_OUT" xml:space="preserve">
    <value>腳本已超時</value>
  </data>
  <data name="ConvertEncoding" xml:space="preserve">
    <value>編碼轉換</value>
  </data>
  <data name="CannotCarryOn" xml:space="preserve">
    <value>條件匹配，但沒有網址輸出。</value>
  </data>
  <data name="Faulted" xml:space="preserve">
    <value>步驟「{0}」發生故障：{1}</value>
  </data>
  <data name="InvalidParam" xml:space="preserve">
    <value>無效的參數：{0}</value>
  </data>
  <data name="InvalidPattern" xml:space="preserve">
    <value>無效的表達式</value>
  </data>
  <data name="InvalidURL" xml:space="preserve">
    <value>無效的網址</value>
  </data>
  <data name="MatchedStop" xml:space="preserve">
    <value>條件匹配：{0}，正在停止…</value>
  </data>
  <data name="NoEntryPoint" xml:space="preserve">
    <value>找不到起點，跳過此步驟。</value>
  </data>
  <data name="NotAFeedRun" xml:space="preserve">
    <value>不是一個反饋操作，跳過此步驟。</value>
  </data>
  <data name="RunMode" xml:space="preserve">
    <value>運作模式</value>
  </data>
  <data name="ScriptError" xml:space="preserve">
    <value>腳本發生錯誤：{0}</value>
  </data>
  <data name="SubProcRun" xml:space="preserve">
    <value>執行子程序</value>
  </data>
  <data name="TestRun_UseDefault" xml:space="preserve">
    <value>運作測試，使用預設值。</value>
  </data>
</root>